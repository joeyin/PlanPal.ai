const DEFAULT_CENTER={lat:43.7292468,lng:-79.6082244};let map,origin,destination,originMarker,destinationMarker,flightPath,searchParams,airports=[],countries=[],markers={};function getCurrentPositionAsync(){return new Promise(((e,t)=>{navigator.geolocation.getCurrentPosition((t=>e(t)),(e=>t(e))),setTimeout((()=>t("timeout")),2500)}))}function fitBounds(e=[]){if(0!==(e=e.filter((e=>e))).length)if(1===e.length)map?.panTo(e[0]);else{const t=new google.maps.LatLngBounds;e.map((e=>t.extend(e))),map?.fitBounds(t,200)}}function markerHighlight(e=[]){e=e.filter((e=>e)),Object.keys(markers).map((t=>{const n=markers[t];n.content.classList.remove("tw-opacity-55","active","tw-hidden"),-1===e.indexOf(t)?(n.zIndex=null,n.content.style.opacity=null,2===e.length&&n.content.classList.add("tw-hidden"),2!==e.length&&n.content.classList.add("tw-opacity-55")):(n.zIndex=1,n.content.classList.add("active"))}))}function drawPath(e=[]){e=e.filter((e=>e)),flightPath&&flightPath.setMap(null),e.length>=2&&(flightPath=new google.maps.Polyline({path:e,geodesic:!1,strokeColor:"#00150D",strokeOpacity:1,strokeWeight:3,zIndex:999}),flightPath.setMap(map))}function buildMarkerContent(e){const t=document.createElement("div");return t.classList.add("marker-airport-wrarpper","tw-flex","tw-flex-col","tw-items-center","loading"),t.innerHTML=`\n  <div class="content">\n    <div class="price">${e.city}</div>\n    <div class="city">${e.state}</div>\n  </div>\n  <div class="marker tw-flex tw-items-center tw-justify-center">\n    <i class="fa-solid fa-plane"></i>\n  </div>\n`,t}async function detectPosition(){let e;const t=e=>{origin[0].selectize.setValue(e.code),$(".place .placeholder-glow").remove(),$(".place .selectize-control.single").css("display","block"),$(".result-filter .placeholder-glow").remove(),$(".result-filter .selectize-control").parent().removeClass("tw-hidden"),Object.keys(markers).map((e=>markers[e].content.classList.remove("loading")))};if(searchParams.get("origin")){const e=airports.filter((e=>e.code===searchParams.get("origin")))?.[0];if(e)return t(e)}try{const{coords:{latitude:t,longitude:n}}=await getCurrentPositionAsync();e=new google.maps.LatLng(t,n)}catch(t){console.error(`Failed to get current position: ${t}`),e=new google.maps.LatLng(DEFAULT_CENTER.lat,DEFAULT_CENTER.lng)}setTimeout((()=>{const e=airports.filter((e=>"Toronto Pearson International Airport"===e.name))?.[0];t(e)}),1e3)}async function initMap(){const{Map:e}=await google.maps.importLibrary("maps"),{AdvancedMarkerElement:t}=await google.maps.importLibrary("marker");map=new e(document.getElementById("map"),{zoom:9,center:DEFAULT_CENTER,fullscreenControl:!1,mapTypeControl:!1,streetViewControl:!1,zoomControl:!1,gestureHandling:"greedy",mapTypeControl:!1,maxZoom:13,minZoom:3,streetViewControl:!1,scrollwheel:!1,mapId:"ef34fc3265e9becb"}),airports.map((e=>{const n=new t({map:map,content:buildMarkerContent(e),position:new google.maps.LatLng(e.lat,e.lon),title:e.name});n.content.addEventListener("mouseenter",(function(){n.content.classList.contains("active")||n.content.classList.contains("loading")||(n.zIndex=2,n.content.style.opacity=1)})),n.content.addEventListener("mouseleave",(function(){n.content.classList.contains("active")||n.content.classList.contains("loading")||(n.zIndex=null,n.content.style.opacity=null)})),n.addListener("click",(()=>{n.content.classList.contains("active")||n.content.classList.contains("loading")||document.dispatchEvent(new CustomEvent("selectedDestination",{detail:{...e,update:!0}}))})),markers[e.code]=n,markers[e.code].marker=e}))}async function initUI(){const e={plugins:["autofill_disable"],persist:!1,preload:!0,closeAfterSelect:!0,emptyOptionLabel:"-",maxItems:1,placeholder:"Country or airport",maxOptions:99999,sortField:[{field:"country",direction:"asc"}],labelField:"From",valueField:"code",labelField:"code",searchField:["code","city","country","name","state"],options:airports,render:{item:function(e,t){return`\n        <div class="item tw-text-base tw-font-medium tw-truncate tw-w-full tw-min-h-6" data-value="${t(e.code)}">${t(e.name)}</div>\n      `},option:function(e,t){return`\n        <div class="tw-flex tw-p-1.5 tw-flex-row tw-items-center">\n          <div class="tw-text-lg tw-mr-4">\n            ${countries.filter((n=>n.name===t(e.country)))[0].emoji}\n          </div>\n          <div>\n            <div class="tw-text-sm tw-mb-1 tw-font-medium">${t(e.name)} (${t(e.code)})</div>\n            <div class="text-xs">${t(e.country)}</div>\n          </div>\n        </div>\n      `}}};origin=$("#origin").selectize({...e,onDropdownOpen:function(){destination[0].selectize.close(),$(".form-group.place").addClass("focus"),destination[0].selectize.items.length&&$("#origin + .selectize-control").find(`.selectize-dropdown > div > [data-value='${destination[0].selectize.items[0]}']`).removeAttr("data-selectable")},onDropdownClose:function(){$(".form-group.place").removeClass("focus"),$("#origin + .selectize-control").find(".selectize-dropdown > div > div:not([data-selectable])").attr("data-selectable","true")},onChange:function(e){document.dispatchEvent(new CustomEvent("selectedOrigin",{detail:markers[e]?.marker}))}}),destination=$("#destination").selectize({...e,onDropdownOpen:function(){origin[0].selectize.close(),$(".form-group.place").addClass("focus"),origin[0].selectize.items.length&&$("#destination + .selectize-control").find(`.selectize-dropdown > div > [data-value='${origin[0].selectize.items[0]}']`).removeAttr("data-selectable")},onDropdownClose:function(){$(".form-group.place").removeClass("focus"),$("#destination + .selectize-control").find(".selectize-dropdown > div > div:not([data-selectable])").attr("data-selectable","true")},onChange:function(e){document.dispatchEvent(new CustomEvent("selectedDestination",{detail:markers[e]?.marker}))}}),$("#place-swap").click((function(){const e=origin[0].selectize.items[0],t=destination[0].selectize.items[0];origin[0].selectize.setValue(t),destination[0].selectize.setValue(e)}));const t=searchParams.get("depart")&&moment(searchParams.get("depart")).isValid()?moment(searchParams.get("depart")):moment().add(1,"day"),n=searchParams.get("return")&&moment(searchParams.get("return")).isValid()?moment(searchParams.get("return")):moment().add(8,"day");$("input[name='depart']").val(t.format("YYYY-MM-DD")),$("input[name='return']").val(n.format("YYYY-MM-DD")),$("#departureandretrun").daterangepicker({autoApply:!0,minDate:moment(),startDate:t,endDate:n,locale:{format:"ddd, MMM D"}}),$("#departureandretrun").on("apply.daterangepicker",(function(e,t){$("input[name='depart']").val(t.startDate.format("YYYY-MM-DD")),$("input[name='return']").val(t.endDate.format("YYYY-MM-DD"))})),$("#departure").daterangepicker({autoApply:!0,singleDatePicker:!0,minDate:moment(),startDate:t,locale:{format:"ddd, MMM D"}}),$("#departure").on("apply.daterangepicker",(function(e,t){$("input[name='depart']").val(t.startDate.format("YYYY-MM-DD"))})),$("input[name='childrens'], input[name='adults']").change((function(e){this.value=parseInt(this.value)<1?0:parseInt(this.value);const t=parseInt($("input[name='adults']").val())||0,n=parseInt($("input[name='childrens']").val())||0,a=$(".dropdown-menu.passengers #apply");t+n?a.removeClass("disabled"):a.addClass("disabled")})),$(".dropdown-menu.passengers #apply").click((function(e){if(e.currentTarget.classList.contains("disabled"))return e.preventDefault(),void e.stopPropagation();const t=parseInt($("input[name='adults']").val()),n=parseInt($("input[name='childrens']").val());$("#passenger").text(t+n),$("input[name='adult']").val(t),$("input[name='children']").val(n)})),$("#departureandretrun,#departure").on("show.daterangepicker",(function(e,t){$(".form-group.datepicker").addClass("focus")})),$("#departureandretrun,#departure").on("hide.daterangepicker",(function(e,t){$(".form-group.datepicker").removeClass("focus")})),$(".dropdown-menu .dropdown-item").click((function(e){const t=e.currentTarget.classList;t.contains("dropdown-trip-type")?selectTripType(e):t.contains("dropdown-cabin")&&selectCabin(e)})),$("button.passenger-decrease").click((function(e){e.preventDefault(),e.stopPropagation();e.currentTarget.classList.contains("adults")?updatePassengerCount("input[name='adults']",-1):updatePassengerCount("input[name='childrens']",-1)})),$("button.passenger-increase").click((function(e){e.preventDefault(),e.stopPropagation();e.currentTarget.classList.contains("adults")?updatePassengerCount("input[name='adults']",1):updatePassengerCount("input[name='childrens']",1)})),$(".chatbot").click((function(e){$(".chatbox .dialog").toggleClass("d-none")})),$(".chatbox form").submit((function(e){e.preventDefault(),$(this).hasClass("avoid")||($(this).addClass("avoid"),$(".chatbox input:eq(0)").val(""),$(".chatbox #ask").append(`\n      <br/><small class="tw-text-secondary">${moment().format("MMM D, HH:mm:ss")}</small>\n    `).removeClass("d-none"),setTimeout((()=>{$(".chatbox #loading").removeClass("d-none"),setTimeout((()=>{$(".chatbox #loading").addClass("d-none"),$(".chatbox #answer").append(`\n          <br/><small class="tw-text-secondary">${moment().format("MMM D, HH:mm:ss")}</small>\n        `).removeClass("d-none")}),3800)}),600))}));const a=await(await fetch("https://good-series.com/PlanPal.ai/json/trip.json")).json(),i=await(await fetch("https://good-series.com/PlanPal.ai/json/cabin.json")).json();$("form#search").submit((function(e){e.preventDefault();const t=[],n=Object.fromEntries(new FormData(e.target)),o=a.filter((e=>e.name===n?.tripType));o.length&&(t.push(`trip=${o[0].value}`),t.push(`depart=${n.depart}`),"round-trip"===o[0].value&&t.push(`return=${n.return}`));const r=i.filter((e=>e.name===n?.cabin));r.length&&t.push(`cabin=${r[0].value}`),["adults","childrens","origin","destination"].map((e=>n[e]&&t.push(`${e}=${n[e]}`))),location.href=`flights?${t.join("&")}`}))}function setupEventListener(){document.addEventListener("selectedOrigin",(e=>{originMarker=markers[e?.detail?.code],origin[0].selectize.setValue(e?.detail?.code),markerHighlight([destinationMarker?.marker?.code,originMarker?.marker?.code]),fitBounds([originMarker?.position,destinationMarker?.position]),drawPath([originMarker?.position,destinationMarker?.position]),$("input[name='origin']").val(e?.detail?.code)})),document.addEventListener("selectedDestination",(e=>{if(!0===e?.detail?.update)return destination[0].selectize.setValue(e?.detail?.code);destinationMarker=markers[e?.detail?.code],markerHighlight([destinationMarker?.marker?.code,originMarker?.marker?.code]),fitBounds([originMarker?.position,destinationMarker?.position]),drawPath([originMarker?.position,destinationMarker?.position]),$("input[name='destination']").val(e?.detail?.code)}))}function calculateMonthlyAverages(e){const{time:t,temperature_2m_min:n}=e.daily,a={};for(let e=0;e<t.length;e++){const i=new Date(`${t[e]} 00:00:00`),o=i.getMonth()+1,r=`${i.getFullYear()}-${o<10?"0"+o:o}`;a[r]||(a[r]={sum:0,count:0}),a[r].sum+=n[e],a[r].count+=1}const i={};for(const[e,{sum:t,count:n}]of Object.entries(a))i[e]=t/n;return i}async function setDefaultsFromURL(){if(searchParams.get("destination")!==searchParams.get("origin")){const e=airports.filter((e=>e.code===searchParams.get("destination")))?.[0];e&&destination[0].selectize.setValue(e.code)}if(document.querySelector("#highcharts")){const e=Highcharts.chart("highcharts",{chart:{type:"line"},title:{text:"Monthly Average Temperature in 2023"},subtitle:null,xAxis:{categories:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]},yAxis:{title:{text:"Temperature (°C)"}},legend:{enabled:!1},credits:{enabled:!1},series:[{name:"Temperatures",data:[],color:"#05AA6E"}]});e.showLoading();const t=calculateMonthlyAverages(await(await fetch(`https://historical-forecast-api.open-meteo.com/v1/forecast?latitude=${destinationMarker.marker.lat}&longitude=${destinationMarker.marker.lon}&start_date=2023-01-01&end_date=2023-12-31&daily=temperature_2m_min`)).json());e.hideLoading(),e.series[0].setData([...Object.keys(t).map((e=>parseFloat(t[e].toFixed(2))))])}}async function onLoad(){searchParams=new URLSearchParams(window.location.search),airports=await(await fetch("https://good-series.com/PlanPal.ai/json/airports.json")).json(),airports=airports.filter((e=>e.lat&&e.lon&&e.code&&["large"].includes(e.size))),countries=await(await fetch("https://good-series.com/PlanPal.ai/json/countries.json")).json(),await initUI(),setupEventListener(),await initMap(),await detectPosition(),await setDefaultsFromURL()}function updatePassengerCount(e,t){const n=$(e),a=Math.max(0,parseInt(n.val())+t);n.val(a).trigger("change"),n.parent().find("button:eq(0)").attr("disabled",0===a)}function selectTripType(e){const t=$(e.target).text();$("#tripType").text(t),$("input[name='tripType']").val(t),"One way"===t?($("#oneway-trip").removeClass("tw-hidden"),$("#round-trip").addClass("tw-hidden")):($("#oneway-trip").addClass("tw-hidden"),$("#round-trip").removeClass("tw-hidden"))}function selectCabin(e){const t=$(e.target).text();$("#cabin").text(t),$("input[name='cabin']").val(t)}window.onload=onLoad;